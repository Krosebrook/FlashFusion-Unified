import React, { useState, useEffect } from 'react';
import { ChevronRight, Menu, X, Home, Users, Settings, BarChart3, Zap, ArrowRight, Star, Globe, Shield, Rocket, Plus, Mail, Phone, MessageCircle, HelpCircle } from 'lucide-react';

const FlashFusionUnited = () => {
  const [currentPage, setCurrentPage] = useState('home');
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [animationClass, setAnimationClass] = useState('');
  const [fabOpen, setFabOpen] = useState(false);

  // Subtle animation effects
  const animations = ['fadeIn', 'slideUp', 'scaleIn'];
  
  const triggerRandomAnimation = () => {
    const randomAnimation = animations[Math.floor(Math.random() * animations.length)];
    setAnimationClass(randomAnimation);
    setTimeout(() => setAnimationClass(''), 600);
  };

  // Occasional animations
  useEffect(() => {
    const interval = setInterval(() => {
      if (Math.random() > 0.85) { // 15% chance
        triggerRandomAnimation();
      }
    }, 5000);
    return () => clearInterval(interval);
  }, []);

  const navigationItems = [
    { id: 'home', label: 'Home', icon: Home },
    { id: 'dashboard', label: 'Dashboard', icon: BarChart3 },
    { id: 'team', label: 'Team', icon: Users },
    { id: 'settings', label: 'Settings', icon: Settings }
  ];

  const fabActions = [
    { icon: Mail, label: 'Contact', color: '#667eea' },
    { icon: Phone, label: 'Call', color: '#4ecdc4' },
    { icon: MessageCircle, label: 'Chat', color: '#a55eea' },
    { icon: HelpCircle, label: 'Help', color: '#feca57' }
  ];

  // Simple page navigation
  const navigateTo = (page) => {
    setCurrentPage(page);
    setIsMobileMenuOpen(false);
    triggerRandomAnimation();
  };

  const HomePage = () => (
    <div className={`page-content ${animationClass}`}>
      {/* Hero Section */}
      <section className="hero-section">
        <div className="hero-content">
          <div className="hero-badge">
            <Zap className="w-4 h-4" />
            <span>Innovation Powered</span>
          </div>
          <h1 className="hero-title">
            Welcome to <span className="gradient-text">FlashFusion-United</span>
          </h1>
          <p className="hero-subtitle">
            The next-generation platform that combines cutting-edge technology with seamless user experience. 
            Join thousands of professionals who trust FlashFusion-United for their digital transformation.
          </p>
          <div className="hero-buttons">
            <button 
              className="btn btn-primary"
              onClick={() => navigateTo('dashboard')}
            >
              Get Started <ArrowRight className="w-4 h-4 ml-2" />
            </button>
            <button 
              className="btn btn-secondary"
              onClick={() => navigateTo('team')}
            >
              Learn More
            </button>
          </div>
        </div>
        <div className="hero-visual">
          <div className="hero-card">
            <div className="metrics-grid">
              <div className="metric">
                <span className="metric-number">99.9%</span>
                <span className="metric-label">Uptime</span>
              </div>
              <div className="metric">
                <span className="metric-number">50K+</span>
                <span className="metric-label">Active Users</span>
              </div>
              <div className="metric">
                <span className="metric-number">150+</span>
                <span className="metric-label">Countries</span>
              </div>
              <div className="metric">
                <span className="metric-number">24/7</span>
                <span className="metric-label">Support</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="features-section">
        <div className="section-header">
          <h2>Why Choose FlashFusion-United?</h2>
          <p>Discover the features that set us apart from the competition</p>
        </div>
        <div className="features-grid">
          <div className="feature-card performance-card" onClick={() => navigateTo('dashboard')}>
            <div className="feature-icon">
              <Rocket className="w-6 h-6" />
            </div>
            <h3>Lightning Performance</h3>
            <p>Experience blazing-fast performance with our optimized infrastructure and global CDN</p>
            <div className="feature-arrow">
              <ChevronRight className="w-4 h-4" />
            </div>
          </div>
          <div className="feature-card security-card" onClick={() => navigateTo('team')}>
            <div className="feature-icon">
              <Shield className="w-6 h-6" />
            </div>
            <h3>Enterprise Security</h3>
            <p>Bank-level security with 99.9% uptime guarantee and SOC 2 compliance</p>
            <div className="feature-arrow">
              <ChevronRight className="w-4 h-4" />
            </div>
          </div>
          <div className="feature-card global-card" onClick={() => navigateTo('settings')}>
            <div className="feature-icon">
              <Globe className="w-6 h-6" />
            </div>
            <h3>Global Scale</h3>
            <p>Reach users worldwide with our global network and multi-region deployment</p>
            <div className="feature-arrow">
              <ChevronRight className="w-4 h-4" />
            </div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="stats-section">
        <div className="stats-grid">
          <div className="stat-item">
            <div className="stat-number">2.5M+</div>
            <div className="stat-label">Active Users</div>
          </div>
          <div className="stat-item">
            <div className="stat-number">150+</div>
            <div className="stat-label">Countries</div>
          </div>
          <div className="stat-item">
            <div className="stat-number">99.9%</div>
            <div className="stat-label">Uptime</div>
          </div>
          <div className="stat-item">
            <div className="stat-number">24/7</div>
            <div className="stat-label">Support</div>
          </div>
        </div>
      </section>
    </div>
  );

  const DashboardPage = () => (
    <div className={`page-content ${animationClass}`}>
      <div className="dashboard-header">
        <h1>Performance Dashboard</h1>
        <p>Monitor your metrics and analytics in real-time</p>
      </div>
      
      <div className="dashboard-grid">
        <div className="dashboard-card analytics-card">
          <div className="card-header">
            <h3>Active Sessions</h3>
            <span className="trend-up">+12%</span>
          </div>
          <div className="card-content">
            <div className="metric-large">2,847</div>
            <div className="metric-subtitle">Currently online</div>
          </div>
        </div>
        
        <div className="dashboard-card revenue-card">
          <div className="card-header">
            <h3>Monthly Revenue</h3>
            <span className="trend-up">+8.2%</span>
          </div>
          <div className="card-content">
            <div className="metric-large">$12,943</div>
            <div className="metric-subtitle">This month</div>
          </div>
        </div>
        
        <div className="dashboard-card conversion-card">
          <div className="card-header">
            <h3>Conversion Rate</h3>
            <span className="trend-neutral">-2.1%</span>
          </div>
          <div className="card-content">
            <div className="metric-large">23.7%</div>
            <div className="metric-subtitle">Last 30 days</div>
          </div>
        </div>
        
        <div className="dashboard-card growth-card">
          <div className="card-header">
            <h3>User Growth</h3>
            <span className="trend-up">+15.3%</span>
          </div>
          <div className="card-content">
            <div className="metric-large">1,284</div>
            <div className="metric-subtitle">New users</div>
          </div>
        </div>
      </div>
      
      <div className="action-buttons">
        <button className="btn btn-team" onClick={() => navigateTo('team')}>
          View Team <ArrowRight className="w-4 h-4 ml-2" />
        </button>
        <button className="btn btn-settings" onClick={() => navigateTo('settings')}>
          Manage Settings
        </button>
      </div>
    </div>
  );

  const TeamPage = () => (
    <div className={`page-content ${animationClass}`}>
      <div className="team-header">
        <h1>Meet Our Team</h1>
        <p>The talented professionals behind FlashFusion-United</p>
      </div>
      
      <div className="team-grid">
        {[
          { name: 'Alex Johnson', role: 'CEO & Founder', avatar: '👨‍💼', expertise: 'Strategy & Vision' },
          { name: 'Sarah Chen', role: 'Chief Technology Officer', avatar: '👩‍💻', expertise: 'Engineering & Architecture' },
          { name: 'Mike Rodriguez', role: 'Head of Design', avatar: '👨‍🎨', expertise: 'UX & Product Design' },
          { name: 'Emily Davis', role: 'Product Manager', avatar: '👩‍💼', expertise: 'Product Strategy' },
          { name: 'David Kim', role: 'Lead Developer', avatar: '👨‍💻', expertise: 'Full-Stack Development' },
          { name: 'Lisa Wang', role: 'Marketing Director', avatar: '👩‍📊', expertise: 'Growth & Analytics' }
        ].map((member, index) => (
          <div key={index} className="team-card" onClick={triggerRandomAnimation}>
            <div className="team-avatar">{member.avatar}</div>
            <h3>{member.name}</h3>
            <p className="team-role">{member.role}</p>
            <p className="team-expertise">{member.expertise}</p>
            <div className="team-rating">
              {[...Array(5)].map((_, i) => (
                <Star key={i} className="w-4 h-4 fill-current text-yellow-400" />
              ))}
            </div>
          </div>
        ))}
      </div>
      
      <div className="team-actions">
        <button className="btn btn-dashboard" onClick={() => navigateTo('dashboard')}>
          View Dashboard <BarChart3 className="w-4 h-4 ml-2" />
        </button>
        <button className="btn btn-home" onClick={() => navigateTo('home')}>
          Back to Home
        </button>
      </div>
    </div>
  );

  const SettingsPage = () => (
    <div className={`page-content ${animationClass}`}>
      <div className="settings-header">
        <h1>Account Settings</h1>
        <p>Customize your FlashFusion-United experience</p>
      </div>
      
      <div className="settings-sections">
        <div className="settings-card account-settings">
          <h3>Account Preferences</h3>
          <div className="setting-item">
            <div className="setting-info">
              <label>Email Notifications</label>
              <span className="setting-desc">Receive updates about your account</span>
            </div>
            <button className="toggle-btn active" onClick={triggerRandomAnimation}>Enabled</button>
          </div>
          <div className="setting-item">
            <div className="setting-info">
              <label>Two-Factor Authentication</label>
              <span className="setting-desc">Enhanced security for your account</span>
            </div>
            <button className="toggle-btn" onClick={triggerRandomAnimation}>Disabled</button>
          </div>
          <div className="setting-item">
            <div className="setting-info">
              <label>Auto-save</label>
              <span className="setting-desc">Automatically save your work</span>
            </div>
            <button className="toggle-btn active" onClick={triggerRandomAnimation}>Enabled</button>
          </div>
        </div>
        
        <div className="settings-card appearance-settings">
          <h3>Appearance</h3>
          <div className="setting-item">
            <div className="setting-info">
              <label>Theme</label>
              <span className="setting-desc">Choose your preferred theme</span>
            </div>
            <button className="toggle-btn" onClick={triggerRandomAnimation}>Light</button>
          </div>
          <div className="setting-item">
            <div className="setting-info">
              <label>Animations</label>
              <span className="setting-desc">Enable smooth transitions</span>
            </div>
            <button className="toggle-btn active" onClick={triggerRandomAnimation}>Enabled</button>
          </div>
          <div className="setting-item">
            <div className="setting-info">
              <label>Sound Effects</label>
              <span className="setting-desc">Audio feedback for interactions</span>
            </div>
            <button className="toggle-btn active" onClick={triggerRandomAnimation}>Enabled</button>
          </div>
        </div>
        
        <div className="settings-card privacy-settings">
          <h3>Privacy & Security</h3>
          <div className="setting-item">
            <div className="setting-info">
              <label>Analytics</label>
              <span className="setting-desc">Help improve our service</span>
            </div>
            <button className="toggle-btn active" onClick={triggerRandomAnimation}>Enabled</button>
          </div>
          <div className="setting-item">
            <div className="setting-info">
              <label>Marketing Communications</label>
              <span className="setting-desc">Product updates and news</span>
            </div>
            <button className="toggle-btn" onClick={triggerRandomAnimation}>Disabled</button>
          </div>
          <div className="setting-item">
            <div className="setting-info">
              <label>Profile Visibility</label>
              <span className="setting-desc">Who can see your profile</span>
            </div>
            <button className="toggle-btn active" onClick={triggerRandomAnimation}>Public</button>
          </div>
        </div>
      </div>
      
      <div className="settings-actions">
        <button className="btn btn-save" onClick={() => navigateTo('home')}>
          Save Changes <ArrowRight className="w-4 h-4 ml-2" />
        </button>
        <button className="btn btn-reset" onClick={triggerRandomAnimation}>
          Reset to Defaults
        </button>
      </div>
    </div>
  );

  const renderCurrentPage = () => {
    switch(currentPage) {
      case 'home': return <HomePage />;
      case 'dashboard': return <DashboardPage />;
      case 'team': return <TeamPage />;
      case 'settings': return <SettingsPage />;
      default: return <HomePage />;
    }
  };

  // Modern, vibrant CSS
  const styles = `
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  line-height: 1.6;
  color: #1a202c;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
  min-height: 100vh;
}

.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background: rgba(255, 255, 255, 0.95);
}

/* Modern Navigation */
.navbar {
  background: linear-gradient(135deg, #667eea, #764ba2);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  position: sticky;
  top: 0;
  z-index: 1000;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.nav-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 70px;
}

.nav-brand {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  font-weight: 700;
  font-size: 1.5rem;
  color: white;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.nav-brand:hover {
  transform: scale(1.05);
}

.desktop-nav {
  display: flex;
  gap: 0.5rem;
}

.nav-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border: none;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-weight: 500;
  color: white;
  backdrop-filter: blur(10px);
}

.nav-item:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.nav-item.active {
  background: rgba(255, 255, 255, 0.9);
  color: #667eea;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.mobile-menu-btn {
  display: none;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  cursor: pointer;
  color: white;
  padding: 0.5rem;
  border-radius: 8px;
  transition: all 0.2s ease;
}

.mobile-menu-btn:hover {
  background: rgba(255, 255, 255, 0.2);
}

.mobile-nav {
  display: none;
  flex-direction: column;
  padding: 1rem 2rem;
  background: linear-gradient(135deg, #667eea, #764ba2);
}

.mobile-nav-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem;
  border: none;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-weight: 500;
  color: white;
  text-align: left;
  margin-bottom: 0.5rem;
}

.mobile-nav-item:hover {
  background: rgba(255, 255, 255, 0.2);
}

.mobile-nav-item.active {
  background: rgba(255, 255, 255, 0.9);
  color: #667eea;
}

/* Main Content */
.main-content {
  flex: 1;
  padding: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  width: 100%;
}

.page-content {
  animation: slideIn 0.4s ease-out;
}

/* Hero Section */
.hero-section {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  align-items: center;
  padding: 4rem 0;
  min-height: 60vh;
}

.hero-badge {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
  border-radius: 50px;
  font-size: 0.875rem;
  font-weight: 500;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
}

.hero-title {
  font-size: 3.5rem;
  font-weight: 800;
  line-height: 1.1;
  margin: 1.5rem 0;
  color: #1a202c;
}

.gradient-text {
  background: linear-gradient(135deg, #667eea, #764ba2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.hero-subtitle {
  font-size: 1.25rem;
  color: #4a5568;
  margin: 1.5rem 0;
  line-height: 1.6;
}

.hero-buttons {
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
}

.hero-card {
  background: rgba(255, 255, 255, 0.9);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(20px);
}

.metrics-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
}

.metric {
  text-align: center;
}

.metric-number {
  display: block;
  font-size: 1.5rem;
  font-weight: 700;
  color: #1a202c;
  margin-bottom: 0.25rem;
}

.metric-label {
  color: #718096;
  font-size: 0.875rem;
  font-weight: 500;
}

/* Modern Buttons */
.btn {
  display: inline-flex;
  align-items: center;
  padding: 0.875rem 2rem;
  border-radius: 12px;
  font-weight: 600;
  text-decoration: none;
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.btn-primary {
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

.btn-secondary {
  background: rgba(255, 255, 255, 0.9);
  color: #667eea;
  border: 1px solid #e2e8f0;
}

.btn-secondary:hover {
  background: white;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.btn-team {
  background: linear-gradient(135deg, #4ecdc4, #44a08d);
  color: white;
}

.btn-settings {
  background: linear-gradient(135deg, #ffeaa7, #fdcb6e);
  color: #2d3436;
}

.btn-dashboard {
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
}

.btn-home {
  background: linear-gradient(135deg, #ff7675, #fd79a8);
  color: white;
}

.btn-save {
  background: linear-gradient(135deg, #00b894, #00cec9);
  color: white;
}

.btn-reset {
  background: linear-gradient(135deg, #e17055, #fd79a8);
  color: white;
}

.btn:hover {
  transform: translateY(-2px);
}

/* Features Section */
.features-section {
  padding: 4rem 0;
}

.section-header {
  text-align: center;
  margin-bottom: 3rem;
}

.section-header h2 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 1rem;
  color: #1a202c;
}

.section-header p {
  font-size: 1.125rem;
  color: #4a5568;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.feature-card {
  background: rgba(255, 255, 255, 0.9);
  border-radius: 16px;
  padding: 2rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(20px);
}

.feature-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.performance-card:hover {
  border-color: #667eea;
}

.security-card:hover {
  border-color: #4ecdc4;
}

.global-card:hover {
  border-color: #fd79a8;
}

.feature-icon {
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, #667eea, #764ba2);
  border-radius: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  margin-bottom: 1.5rem;
}

.feature-card h3 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: #1a202c;
}

.feature-card p {
  color: #4a5568;
  margin-bottom: 1.5rem;
  line-height: 1.6;
}

.feature-arrow {
  display: flex;
  justify-content: flex-end;
  color: #667eea;
}

/* Stats Section */
.stats-section {
  padding: 3rem;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 20px;
  margin: 2rem 0;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(20px);
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
}

.stat-item {
  text-align: center;
  transition: transform 0.2s ease;
}

.stat-item:hover {
  transform: scale(1.05);
}

.stat-number {
  font-size: 2.5rem;
  font-weight: 800;
  background: linear-gradient(135deg, #667eea, #764ba2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: 0.5rem;
}

.stat-label {
  color: #718096;
  font-weight: 500;
}

/* Dashboard */
.dashboard-header {
  margin-bottom: 3rem;
  text-align: center;
}

.dashboard-header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  color: #1a202c;
}

.dashboard-header p {
  color: #4a5568;
  font-size: 1.125rem;
}

.dashboard-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  margin-bottom: 3rem;
}

.dashboard-card {
  background: rgba(255, 255, 255, 0.9);
  border-radius: 16px;
  padding: 2rem;
  transition: all 0.2s ease;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(20px);
}

.dashboard-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.analytics-card:hover {
  border-color: #667eea;
}

.revenue-card:hover {
  border-color: #4ecdc4;
}

.conversion-card:hover {
  border-color: #fd79a8;
}

.growth-card:hover {
  border-color: #ffeaa7;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.card-header h3 {
  font-weight: 600;
  color: #1a202c;
}

.trend-up {
  color: #00b894;
  font-weight: 600;
  font-size: 0.875rem;
}

.trend-neutral {
  color: #fdcb6e;
  font-weight: 600;
  font-size: 0.875rem;
}

.metric-large {
  font-size: 2.5rem;
  font-weight: 800;
  color: #1a202c;
  margin-bottom: 0.5rem;
}

.metric-subtitle {
  color: #718096;
  font-size: 0.875rem;
}

.action-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

/* Team */
.team-header {
  text-align: center;
  margin-bottom: 3rem;
}

.team-header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 1rem;
  color: #1a202c;
}

.team-header p {
  color: #4a5568;
  font-size: 1.125rem;
}

.team-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
  margin-bottom: 3rem;
}

.team-card {
  background: rgba(255, 255, 255, 0.9);
  border-radius: 16px;
  padding: 2rem;
  text-align: center;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(20px);
}

.team-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.team-avatar {
  font-size: 4rem;
  margin-bottom: 1rem;
}

.team-card h3 {
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #1a202c;
}

.team-role {
  color: #667eea;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.team-expertise {
  color: #718096;
  margin-bottom: 1rem;
  font-size: 0.875rem;
}

.team-rating {
  display: flex;
  justify-content: center;
  gap: 0.25rem;
}

.team-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

/* Settings */
.settings-header {
  margin-bottom: 3rem;
  text-align: center;
}

.settings-header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 1rem;
  color: #1a202c;
}

.settings-header p {
  color: #4a5568;
  font-size: 1.125rem;
}

.settings-sections {
  display: grid;
  gap: 2rem;
  margin-bottom: 3rem;
}

.settings-card {
  background: rgba(255, 255, 255, 0.9);
  border-radius: 16px;
  padding: 2rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(20px);
  transition: all 0.2s ease;
}

.settings-card:hover {
  transform: translateY(-2px);
}

.account-settings:hover {
  border-color: #667eea;
}

.appearance-settings:hover {
  border-color: #4ecdc4;
}

.privacy-settings:hover {
  border-color: #fd79a8;
}

.settings-card h3 {
  font-weight: 600;
  margin-bottom: 1.5rem;
  color: #1a202c;
}

.setting-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 0;
  border-bottom: 1px solid rgba(226, 232, 240, 0.5);
}

.setting-item:last-child {
  border-bottom: none;
}

.setting-info label {
  font-weight: 500;
  color: #1a202c;
  display: block;
  margin-bottom: 0.25rem;
}

.setting-desc {
  color: #718096;
  font-size: 0.875rem;
}

.toggle-btn {
  padding: 0.5rem 1rem;
  border-radius: 8px;
  border: 1px solid #e2e8f0;
  background: white;
  cursor: pointer;
  transition: all 0.2s ease;
  font-weight: 500;
  color: #4a5568;
}

.toggle-btn.active {
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
  border-color: #667eea;
}

.toggle-btn:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.settings-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

/* Floating Action Button */
.fab-container {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  z-index: 1000;
}

.fab-main {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  transition: all 0.2s ease;
}

.fab-main:hover {
  transform: scale(1.1);
  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);
}

.fab-actions {
  position: absolute;
  bottom: 80px;
  right: 0;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.fab-action {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: none;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: scale(0);
  opacity: 0;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.fab-container.fab-open .fab-action {
  transform: scale(1);
  opacity: 1;
}

/* Subtle Animations */
@keyframes slideIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes scaleIn {
  from { opacity: 0; transform: scale(0.9); }
  to { opacity: 1; transform: scale(1); }
}

.fadeIn { animation: fadeIn 0.5s ease; }
.slideUp { animation: slideUp 0.5s ease; }
.scaleIn { animation: scaleIn 0.5s ease; }

/* Footer */
.footer {
  background: linear-gradient(135deg, #2d3436, #636e72);
  color: white;
  padding: 2rem;
  text-align: center;
}

.footer-content {
  max-width: 1200px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  align-items: center;
}

.footer-brand {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  font-weight: 700;
  font-size: 1.5rem;
}

.footer-links {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1rem;
}

.footer-links button {
  background: rgba(255, 255, 255, 0.1);
  border: none;
  color: white;
  cursor: pointer;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  transition: all 0.2s ease;
}

.footer-links button:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.footer-bottom {
  text-align: center;
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  color: #cbd5e0;
}

/* Responsive Design */
@media (max-width: 768px) {
  .desktop-nav { display: none; }
  .mobile-menu-btn { display: block; }
  .mobile-nav { display: flex; }
  
  .hero-section {
    grid-template-columns: 1fr;
    text-align: center;
    gap: 2rem;
  }
  
  .hero-title { font-size: 2.5rem; }
  .features-grid { grid-template-columns: 1fr; }
  .stats-grid { grid-template-columns: repeat(2, 1fr); }
  .dashboard-grid { grid-template-columns: 1fr; }
  .team-grid { grid-template-columns: 1fr; }
  .footer-content { grid-template-columns: 1fr; }
  
  .main-content { padding: 1rem; }
  .nav-container { padding: 0 1rem; }
  
  .fab-container {
    bottom: 1rem;
    right: 1rem;
  }
  
  .metrics-grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-width: 480px) {
  .hero-title { font-size: 2rem; }
  .stats-grid { grid-template-columns: 1fr; }
  
  .setting-item {
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
  }
  
  .action-buttons,
  .team-actions,
  .settings-actions {
    flex-direction: column;
    align-items: center;
  }
  
  .metrics-grid {
    grid-template-columns: 1fr;
  }
}
`;

  // Inject styles
  useEffect(() => {
    if (typeof document !== 'undefined') {
      const styleSheet = document.createElement('style');
      styleSheet.textContent = styles;
      document.head.appendChild(styleSheet);
    }
  }, [styles]);

  return (
    <div className="app">
      {/* Navigation */}
      <header className="navbar">
        <div className="nav-container">
          <div className="nav-brand" onClick={() => navigateTo('home')}>
            <Zap className="w-8 h-8" />
            <span>FlashFusion-United</span>
          </div>
          
          {/* Desktop Navigation */}
          <nav className="nav-menu desktop-nav">
            {navigationItems.map((item) => {
              const Icon = item.icon;
              return (
                <button
                  key={item.id}
                  className={`nav-item ${currentPage === item.id ? 'active' : ''}`}
                  onClick={() => navigateTo(item.id)}
                >
                  <Icon className="w-4 h-4" />
                  {item.label}
                </button>
              );
            })}
          </nav>
          
          {/* Mobile Menu Button */}
          <button 
            className="mobile-menu-btn"
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          >
            {isMobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
        
        {/* Mobile Navigation */}
        {isMobileMenuOpen && (
          <nav className="mobile-nav">
            {navigationItems.map((item) => {
              const Icon = item.icon;
              return (
                <button
                  key={item.id}
                  className={`mobile-nav-item ${currentPage === item.id ? 'active' : ''}`}
                  onClick={() => navigateTo(item.id)}
                >
                  <Icon className="w-4 h-4" />
                  {item.label}
                </button>
              );
            })}
          </nav>
        )}
      </header>

      {/* Main Content */}
      <main className="main-content">
        {renderCurrentPage()}
      </main>

      {/* Floating Action Button */}
      <div className={`fab-container ${fabOpen ? 'fab-open' : ''}`}>
        <div className="fab-actions">
          {fabActions.map((action, index) => {
            const Icon = action.icon;
            return (
              <button
                key={index}
                className="fab-action"
                style={{ backgroundColor: action.color }}
                onClick={() => {
                  triggerRandomAnimation();
                  setFabOpen(false);
                }}
              >
                <Icon className="w-5 h-5" />
              </button>
            );
          })}
        </div>
        <button 
          className="fab-main"
          onClick={() => setFabOpen(!fabOpen)}
        >
          <Plus className={`w-6 h-6 ${fabOpen ? 'rotate-45' : ''}`} />
        </button>
      </div>

      {/* Footer */}
      <footer className="footer">
        <div className="footer-content">
          <div className="footer-brand">
            <Zap className="w-6 h-6" />
            <span>FlashFusion-United</span>
          </div>
          <div className="footer-links">
            <button onClick={() => navigateTo('home')}>Home</button>
            <button onClick={() => navigateTo('dashboard')}>Dashboard</button>
            <button onClick={() => navigateTo('team')}>Team</button>
            <button onClick={() => navigateTo('settings')}>Settings</button>
          </div>
        </div>
        <div className="footer-bottom">
          <p>&copy; 2025 FlashFusion-United. All rights reserved.</p>
        </div>
      </footer>
    </div>
  );
};

export default FlashFusionUnited;